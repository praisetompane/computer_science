def formal_languages_and_automata_theory: deals with definitions and properties of mathematical models of computation (sipser, 2012:3).

provides:
    precise definitions of computers(required by Computability and Complexity theory) (Sipser, 2012:3).

models of computation (Sipser, 2012:3) (Sipser, 2020):
    - finite automata
    - context-free grammar
    - turing machines
    - probabilistic and interactive computation
    - ...

    - finite automata:
        used for:
            text processing
            compilers
            hardware design

    - context-free grammar
        used for:
            programming languages
            artificial intelligence

def symbol (Sipser, 2012:13-14): characters such as a, 0, 1, ", ].

def alphabet (Sipser, 2012:13-14): Σ => Collection of symbols.
    Notation: Σ (Sigma)
    e.g. Sigma {0, 1}, {a, b, c, f}

def string (Sipser, 2012:13-14): a sequence of symbols.
    e.g. wealth, open

def language (Sipser, 2012:13-14): set of strings.
    e.g. Σ = {0, 1}
        Language 1: Set of strings of length 2 => {00, 01, 11, 10}: Finite
        Language 2: Set of strings of length 3 => {000, 001, 010, 100, 111, 110, 101, 011}: Finite
        Language 3: Set of strings starting with 0 => {0, 00, 000, 010, 001}: Infinite

def ϵ: empty string  (Sipser, 2020): string of length 0.

def ∅: empty language: set with no strings.

def Powers of Sigma (Sipser, 2012:13-14):
    e.g.
    Alphabet => Σ = {0, 1}

        Σ^0 = Set of all strings of length 0 => Σ^0 = {ε}
        Σ^1 = Set of all strings of length 1 =>Σ^1 = {0, 1}
        Σ^2 = Set of all strings of length 2 => Σ^2 = {00, 01, 10, 11}
        Σ^3 = Set of all strings of length 3 => Σ^3 = {000, 001, 010, 100, 111, 110, 101, 011}
        .
        .
        .
        Σ^n = Set of all strings of length n = Σ^n

def cardinality: Number of elements in a set (Sipser, 2012:13-14):
    e.g.
        Alphabet => Σ = {0, 1}
            Σ^0 = 1
            Σ^1 = 2
            Σ^2 = 4
            Σ^3 = 8
            Σ^n = 2^n if the Alphabet contains more than 1 symbol

def Σ^* (Sipser, 2012:13-14):
    Σ^0 U Σ^1 U Σ^2 U Σ^3 ...
    e.g.
        Alphabet => Σ = {0, 1}
        Σ^* = {ε} U {0, 1} U {00, 01, 10, 11} U {000, 001, 010, 100, 111, 110, 101, 011} ...
        Σ^* = Set of strings of all lengths over the Alphabet {0,1}: Infinite

References:
    Sipser, M. 2020. Introduction to the Theory of Computation. https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/resources/introduction-finite-automata-regular-expressions/.
