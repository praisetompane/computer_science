What is it?

    def¹: a list of data elements(Wengrow, 2017:2)
    def²: A fixed length
            contiguous allocation of memory cells
                of the same size
                that stores data of the same typeᶜⁱᵗᵃᵗⁱᴼⁿ_ⁿᵉᵉᵈᵉᵈ.

Concepts related to it:
    index = a number which identifies a memory cell in the array (Wengrow, 2017:30).

Performance Analysis (Wengrow, 2017:31-32):
    How fast is it to perform the operation?(i.e. Time Complexity)
        => Measured in terms of the number of steps it takes to complete the operation

    Construction:
        Ask the operating system for 
            a certain number(n) of 
                contiguous allocation of memory cells
                    of the same size(type)

    General Properties:
        1. The computer can directly access(jump to) any memory address
        2. The array stores the memory address of the first value
        3. Every array starts at index 0
            3.1. And the array memory address are numerically one after the other
            Why do array indices start at 0?(zero indexed)
                Ans: Makes the memory address arithmetic below easy???
                    starting_address + index
                    instead of starting_address + index - 1

    Read: Looking up something from a particular spot in the data-structure
          Accessing a value at a particular index (.e.g index 2) (particular spot)

        Steps = 1
        How? :Refer to General Properties -> Point 1
        Big O = O(1) = Constant Time

        Example
            Given :             ["Apple", "Banana", "Pear", "Orange", "Peach"]
            memory address        1010       1011     1012    1013      1014
            index                   0          1        2       3        4

            Request:
                Read value at index 4

                Steps
                    compute and read target address = starting_address + index = 1010 + 4 = 1014


    Search: Looking for a particular value in the data-structure
            Looking to see if a value exists in the array, and if it does, returning its index in the array

        Steps = 

    Insert: Adding a value to the data-structure 
            Adding a new value to an additional index in the array
        
        Steps = 1
        How? :Refer to General Properties
        Big O = O(1) = Constant Time
        
    Delete: Removing a value from the data-structure
            Removing a value at a particular index in the array
        
        Steps = 

References:
    Wengrow J. 2017. A Common-Sense Guide to Data Structures and Algorithms: Level Up Your Core Programming Skills